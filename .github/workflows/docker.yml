name: docker

on:
  push:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: glauth

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . --build-arg arg_k8s_application_commit=${{ github.sha }} --build-arg arg_k8s_application_version=${{ github.ref }} --tag $IMAGE_NAME

      - name: log in github registry
        run: echo "${{ secrets.dockerhub_token }}" | docker login -u splitice --password-stdin

      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Push image
        run: |
          IMAGE_ID=splitice/$IMAGE_NAME

          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          if [[ "$VERSION" == "latest" ]]; then
            docker tag $IMAGE_NAME $IMAGE_ID:git-${{ github.sha }}
            docker push $IMAGE_ID:git-${{ github.sha }}
          fi

